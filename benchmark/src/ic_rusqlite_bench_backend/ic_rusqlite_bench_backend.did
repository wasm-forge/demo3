type Error = variant {
    InvalidCanister;
    CanisterError : record {
        message : text;
    };
};

type Result = variant {
    Ok: text;
    Err : Error;
};

type QueryResult = variant {
    Ok: vec vec text;
    Err : Error;
};

service : {
    "execute": (text) -> (Result);
    "count": (text) -> (Result);
    "bench1_insert_person": (nat64, nat64) -> (Result);
    "bench1_insert_person_one": (nat64) -> (Result);
    "bench1_query_person_by_id": (nat64) -> (Result);
    "bench1_query_person_by_name": (nat64) -> (Result);
    "bench1_query_person_by_like_name": (nat64) -> (Result);
    "bench1_query_person_by_limit_offset": (nat64, nat64) -> (Result);
    "bench1_update_person_by_id": (nat64) -> (Result);
    "bench1_update_person_by_name": (nat64) -> (Result);
    "bench1_delete_person_by_id": (nat64) -> (Result);
    "bench2_insert_person2": (nat64, nat64) -> (Result);
    "bench2_insert_person2_one": (nat64) -> (Result);
    "bench2_query_person2_by_id": (nat64) -> (Result);
    "bench2_query_person2_by_name": (nat64) -> (Result);
    "bench2_query_person2_by_like_name": (nat64) -> (Result);
    "bench2_query_person2_by_limit_offset": (nat64, nat64) -> (Result);
    "bench2_update_person2_by_id": (nat64) -> (Result);
    "bench2_update_person2_by_name": (nat64) -> (Result);
    "bench2_delete_person2_by_id": (nat64) -> (Result);
}
